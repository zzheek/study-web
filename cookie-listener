# cookie (일반적으로 쿠키라고 하면 개발자의 필요에 의해서 생성되어 브라우저에 전송하는 '사용자 정의 쿠키')
- 개발자가 직접 쿠키를 생성할 때는 newCookie()를 이용해서 생성
  반드시 문자열로 된 name/value 필요
- 쿠키는 보안에 취약 -> 용도는 사소하고 서버에 보관할 필요가 없는 데이터들 보관. (ex. 오늘 하루 이 창 열지 않기, 최근 본 상품 목록)
- 쿠키의 유효기간을 지정하는 경우 브라우저가 종료되더라도 보관되는 방식으로 동작 -> '자동 로그인'('remeber-me') 기능에 사용됨

# 쿠키와 세션 같이 활용 - 자동 로그인
- 로그인 구현
  1. 사용자가 로그인 시 임의의 문자열 생성 후 이를 DB에 보관
  2. 쿠키에는 생성된 문자열을 값으로 삼고 유효기간은 1주일로 지정
- 로그인 체크
  1. 현재 사용자의 세션에 로그인 정보가 없는 경우에만 쿠키를 확인
  2. 쿠키의 값과 DB의 값을 비교하고 같다면 사용자의 정보를 읽어와서 세션에 사용자 정보를 추가

# listener
- 'evenet'라는 특정 데이터가 발생하면 자동으로 실행
- 리스너를 이용하면 어떤 정보가 이벤트했을 때 미리 약속해둔 동작을 수행할 수 있으므로 기존의 코드를 변경하지 않고 추가 기능 수행 가능  

# ServletContextEvent
ServletContextEvent를 이용하면 현재 애플리케이션이 실행되는 공간인 ServletContext를 접근 가능
- ServletContext: 현재의 웹 애플리케이션 내 모든 자원들을 같이 사용하는 공간, 무언가를 저장하면 모든 컨트롤러나 JSP 등에서 이를 활용

# ServletContextListener와 스프링
ServletContextListener와 ServletContext를 이용하면 프로젝트가 실행될 때 필요한 객체들을 준비하는 작업 처리 가능
스프링으로 웹 프로젝트에서 미리 로딩하는 작업을 처리할때 이용

  
