# Lombok 라이브러리
- getter/setter등을 생성하거나 생성자 함수를 정의하지 않고 어노테이션을 추가하는 것만으로 가능.
  @Getter @Setter @Data @ToString 등.
  *@Data는 getter/setter/toString/equals/hashCode 등을 모두 컴파일 할때 생성

- @Cleanup
  try-with-resource를 이용하는 대신 @Cleanup을 이용하여 깔끔한 코드 생성 가능.
  @Cleanup이 추가된 변수는 해당 메소드가 끝날 때 close() 호출 보장.

- @Log4j2 
  로그의 레벨(level): 로그의 '중요도'. 레벨을 지정하여 출력될 로그들을 결정할 수 있음(개발시 info 이하, 운영시 eroor/warn 이상)
  Lowest Level -- TRACE-DEBUG-INFO-WARN-ERROR-FATAL -- Highest Level
  어펜더(Appender): 로그를 어떤 방식으로 기록할 것인지 (콘솔창에 출력 or 파일에 출력) 등을 결정


#Connection Pool 이용하기
HikariCP를 이용하기 위해 HikariConfig 객체 생성
implementation group: 'com.zaxxer', name: 'HikariCP', version: '5.0.0'
